// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using WeatherAngularAPP.Data.Context;

namespace WeatherAngularAPP.Data.Migrations
{
    [DbContext(typeof(WeatherContext))]
    [Migration("20211012185810_newProject")]
    partial class newProject
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WeatherAPPAngular.Data.Models.Adress", b =>
                {
                    b.Property<int>("AdressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdressId");

                    b.ToTable("Adresses");
                });

            modelBuilder.Entity("WeatherAPPAngular.Data.Models.TestModel", b =>
                {
                    b.Property<int>("TestModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TestModelId");

                    b.ToTable("TestModels");
                });

            modelBuilder.Entity("WeatherAPPAngular.Data.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdressId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WeatherHistoryId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("AdressId");

                    b.HasIndex("WeatherHistoryId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WeatherAPPAngular.Data.Models.WeatherHistory", b =>
                {
                    b.Property<int>("WeatherHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("TemperatureC")
                        .HasColumnType("int");

                    b.Property<int?>("WeatherLocationWeatherHistoryId")
                        .HasColumnType("int");

                    b.HasKey("WeatherHistoryId");

                    b.HasIndex("WeatherLocationWeatherHistoryId");

                    b.ToTable("WeatherHistories");
                });

            modelBuilder.Entity("WeatherAPPAngular.Data.Models.WeatherLocation", b =>
                {
                    b.Property<int>("WeatherLocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WeatherLocationId");

                    b.ToTable("WeatherLocations");
                });

            modelBuilder.Entity("WeatherAPPAngular.Data.Models.User", b =>
                {
                    b.HasOne("WeatherAPPAngular.Data.Models.Adress", "Adress")
                        .WithMany("Users")
                        .HasForeignKey("AdressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeatherAPPAngular.Data.Models.WeatherHistory", null)
                        .WithMany("Users")
                        .HasForeignKey("WeatherHistoryId");

                    b.Navigation("Adress");
                });

            modelBuilder.Entity("WeatherAPPAngular.Data.Models.WeatherHistory", b =>
                {
                    b.HasOne("WeatherAPPAngular.Data.Models.WeatherHistory", "WeatherLocation")
                        .WithMany()
                        .HasForeignKey("WeatherLocationWeatherHistoryId");

                    b.Navigation("WeatherLocation");
                });

            modelBuilder.Entity("WeatherAPPAngular.Data.Models.Adress", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("WeatherAPPAngular.Data.Models.WeatherHistory", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
